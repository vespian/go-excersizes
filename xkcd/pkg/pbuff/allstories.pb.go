// Code generated by protoc-gen-go.
// source: pkg/pbuff/allstories.proto
// DO NOT EDIT!

/*
Package pbuff is a generated protocol buffer package.

It is generated from these files:
	pkg/pbuff/allstories.proto

It has these top-level messages:
	PBStory
	PBAllStories
*/
package pbuff

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PBStory struct {
	Alt        string `protobuf:"bytes,1,opt,name=Alt" json:"Alt,omitempty"`
	Day        int32  `protobuf:"varint,2,opt,name=Day" json:"Day,omitempty"`
	Img        string `protobuf:"bytes,3,opt,name=Img" json:"Img,omitempty"`
	Link       string `protobuf:"bytes,4,opt,name=Link" json:"Link,omitempty"`
	Month      int32  `protobuf:"varint,5,opt,name=Month" json:"Month,omitempty"`
	News       string `protobuf:"bytes,6,opt,name=News" json:"News,omitempty"`
	Num        int64  `protobuf:"varint,7,opt,name=Num" json:"Num,omitempty"`
	SafeTitle  string `protobuf:"bytes,8,opt,name=SafeTitle" json:"SafeTitle,omitempty"`
	Title      string `protobuf:"bytes,9,opt,name=Title" json:"Title,omitempty"`
	Transcript string `protobuf:"bytes,10,opt,name=Transcript" json:"Transcript,omitempty"`
	Year       int32  `protobuf:"varint,11,opt,name=Year" json:"Year,omitempty"`
}

func (m *PBStory) Reset()                    { *m = PBStory{} }
func (m *PBStory) String() string            { return proto.CompactTextString(m) }
func (*PBStory) ProtoMessage()               {}
func (*PBStory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PBStory) GetAlt() string {
	if m != nil {
		return m.Alt
	}
	return ""
}

func (m *PBStory) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *PBStory) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *PBStory) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *PBStory) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *PBStory) GetNews() string {
	if m != nil {
		return m.News
	}
	return ""
}

func (m *PBStory) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *PBStory) GetSafeTitle() string {
	if m != nil {
		return m.SafeTitle
	}
	return ""
}

func (m *PBStory) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PBStory) GetTranscript() string {
	if m != nil {
		return m.Transcript
	}
	return ""
}

func (m *PBStory) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

type PBAllStories struct {
	Data map[int64]*PBStory `protobuf:"bytes,1,rep,name=Data" json:"Data,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PBAllStories) Reset()                    { *m = PBAllStories{} }
func (m *PBAllStories) String() string            { return proto.CompactTextString(m) }
func (*PBAllStories) ProtoMessage()               {}
func (*PBAllStories) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PBAllStories) GetData() map[int64]*PBStory {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PBStory)(nil), "pbuff.PBStory")
	proto.RegisterType((*PBAllStories)(nil), "pbuff.PBAllStories")
}

func init() { proto.RegisterFile("pkg/pbuff/allstories.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xd9, 0xa6, 0x69, 0xcd, 0x54, 0x44, 0x16, 0x0f, 0x4b, 0x51, 0x09, 0xc5, 0x43, 0x4e,
	0x29, 0xd6, 0x8b, 0x78, 0x6b, 0xa9, 0x48, 0x41, 0x4b, 0xd9, 0xf6, 0xe2, 0x71, 0x2b, 0xdb, 0x1a,
	0xba, 0xf9, 0xc3, 0x66, 0xa3, 0xe4, 0x2b, 0xf8, 0x85, 0xbd, 0xca, 0xcc, 0x42, 0xed, 0xed, 0xcd,
	0xef, 0xbd, 0x4c, 0x76, 0xdf, 0xc2, 0xb0, 0x3a, 0xec, 0xc7, 0xd5, 0xb6, 0xd9, 0xed, 0xc6, 0xca,
	0x98, 0xda, 0x95, 0x36, 0xd3, 0x75, 0x5a, 0xd9, 0xd2, 0x95, 0x3c, 0x24, 0x3e, 0xfa, 0x65, 0xd0,
	0x5f, 0xcd, 0xd6, 0xae, 0xb4, 0x2d, 0xbf, 0x84, 0x60, 0x6a, 0x9c, 0x60, 0x31, 0x4b, 0x22, 0x89,
	0x12, 0xc9, 0x5c, 0xb5, 0xa2, 0x13, 0xb3, 0x24, 0x94, 0x28, 0x91, 0x2c, 0xf2, 0xbd, 0x08, 0x7c,
	0x66, 0x91, 0xef, 0x39, 0x87, 0xee, 0x6b, 0x56, 0x1c, 0x44, 0x97, 0x10, 0x69, 0x7e, 0x05, 0xe1,
	0x5b, 0x59, 0xb8, 0x4f, 0x11, 0xd2, 0x97, 0x7e, 0xc0, 0xe4, 0x52, 0x7f, 0xd7, 0xa2, 0xe7, 0x93,
	0xa8, 0x71, 0xdf, 0xb2, 0xc9, 0x45, 0x3f, 0x66, 0x49, 0x20, 0x51, 0xf2, 0x6b, 0x88, 0xd6, 0x6a,
	0xa7, 0x37, 0x99, 0x33, 0x5a, 0x9c, 0x51, 0xf4, 0x1f, 0xe0, 0x66, 0xef, 0x44, 0xe4, 0xf8, 0x81,
	0xdf, 0x02, 0x6c, 0xac, 0x2a, 0xea, 0x0f, 0x9b, 0x55, 0x4e, 0x00, 0x59, 0x27, 0x04, 0xff, 0xfc,
	0xae, 0x95, 0x15, 0x03, 0x3a, 0x0e, 0xe9, 0xd1, 0x0f, 0x83, 0xf3, 0xd5, 0x6c, 0x6a, 0xcc, 0xda,
	0xf7, 0xc2, 0xef, 0xa1, 0x3b, 0x57, 0x4e, 0x09, 0x16, 0x07, 0xc9, 0x60, 0x72, 0x93, 0x52, 0x41,
	0xe9, 0x69, 0x24, 0x45, 0xff, 0xb9, 0x70, 0xb6, 0x95, 0x14, 0x1d, 0xbe, 0x40, 0x74, 0x44, 0x78,
	0x95, 0x83, 0x6e, 0xa9, 0xbe, 0x40, 0xa2, 0xe4, 0x77, 0x10, 0x7e, 0x29, 0xd3, 0x68, 0x2a, 0x70,
	0x30, 0xb9, 0x38, 0xae, 0xa4, 0xbe, 0xa5, 0x37, 0x9f, 0x3a, 0x8f, 0x6c, 0xdb, 0xa3, 0x47, 0x79,
	0xf8, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x36, 0xd9, 0x60, 0xe2, 0xb2, 0x01, 0x00, 0x00,
}
